{"code":"!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"main\",[],t):\"object\"==typeof exports?exports.main=t():e.main=t()}(\"undefined\"!=typeof self?self:this,function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,\"a\",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p=\"\",r(r.s=0)}([function(e,t,r){var n=r(1),o=r(2);e.exports={test:function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return this.validate(t)},validate:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"\";if(void 0===e||void 0===t)throw new Error(\"Not enough arguments passed to function 'validate'\");if(!o.isObject(t))throw new Error(\"Rules must be an object\");if(!o.isNumber(e)&&!o.isString(e))throw new Error(\"Invalid test parameter\");if(void 0!==t.required&&!1===n.required(e))return{valid:!1,message:function(e,t){if(\"required\"===t)return\"\"===e?\"The input cannot be blank\":e+\" cannot be blank\"}(r,\"required\")};return{valid:!0,message:\"all tests pass\"}}}},function(e,t){e.exports={required:function(e){return\"\"!==e.trim()}}},function(e,t){e.exports={isNumber:function(e){return\"[object Number]\"===Object.prototype.toString.call(e)},isObject:function(e){return\"[object Object]\"===Object.prototype.toString.call(e)},isString:function(e){return\"[object String]\"===Object.prototype.toString.call(e)},objIsEmpty:function(e){if(!this.isObject(e))throw new Error(\"Not an object\");return 0===Object.keys(e).length}}}])});","extractedComments":[]}