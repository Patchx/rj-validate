(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("rj", [], factory);
	else if(typeof exports === 'object')
		exports["rj"] = factory();
	else
		root["rj"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/helpers.js":
/*!************************!*\
  !*** ./src/helpers.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// ---------------------\n// - Private Functions -\n// ---------------------\nfunction _isArray(input) {\n  return Object.prototype.toString.call(input) === '[object Array]';\n}\n\nfunction _isObject(input) {\n  var object_type = Object.prototype.toString.call(input);\n  var invalid_types = ['[object Undefined]', '[object Boolean]', '[object Number]', '[object String]', '[object Array]', '[object Function]'];\n  return invalid_types.indexOf(object_type) === -1;\n}\n\nfunction makeDateObject(input) {\n  if (input.match(/\\:/) === null) {\n    // To deal with timezone issues\n    input += ' 00:00:00';\n  }\n\n  var date_obj = new Date(input);\n  var year = date_obj.getFullYear().toString();\n  var month = date_obj.getMonth() + 1;\n  var day = date_obj.getDate();\n  var hour = date_obj.getHours();\n  var min = date_obj.getMinutes();\n  var sec = date_obj.getSeconds();\n  var to_prepend = [month, day, hour, min, sec];\n  var prepended = to_prepend.map(function (item) {\n    if (item < 10) {\n      return '0' + item.toString();\n    } else {\n      return item.toString();\n    }\n  });\n  return {\n    year: year,\n    month: prepended[0],\n    day: prepended[1],\n    hour: prepended[2],\n    min: prepended[3],\n    sec: prepended[4]\n  };\n} // -----------\n// - Exports -\n// -----------\n\n\nmodule.exports = {\n  inArray: function inArray(needle, haystack) {\n    if (!_isArray(haystack)) {\n      throw new Error(\"Second parameter to inArray() must be an array\");\n    }\n\n    return haystack.indexOf(needle) !== -1;\n  },\n  isArray: function isArray(input) {\n    return _isArray(input);\n  },\n  isBoolean: function isBoolean(input) {\n    return Object.prototype.toString.call(input) === '[object Boolean]';\n  },\n  isDate: function isDate(input) {\n    if (Object.prototype.toString.call(input) === '[object Date]') {\n      return true;\n    }\n\n    if (Object.prototype.toString.call(input) !== '[object String]') {\n      return false;\n    }\n\n    var date_obj = makeDateObject(input);\n    var date_strings = [\"\".concat(date_obj.year, \"-\").concat(date_obj.month, \"-\").concat(date_obj.day), \"\".concat(date_obj.month, \"/\").concat(date_obj.day, \"/\").concat(date_obj.year), \"\".concat(date_obj.month, \"/\").concat(date_obj.day, \"/\").concat(date_obj.year.substring(2))];\n\n    for (var i = 0; i < date_strings.length; i++) {\n      if (input === date_strings[i]) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n  isDateTime: function isDateTime(input) {\n    if (Object.prototype.toString.call(input) === '[object Date]') {\n      return true;\n    }\n\n    if (Object.prototype.toString.call(input) !== '[object String]') {\n      return false;\n    }\n\n    var date_obj = makeDateObject(input);\n    var date_strings = [\"\".concat(date_obj.year, \"-\").concat(date_obj.month, \"-\").concat(date_obj.day, \" \").concat(date_obj.hour, \":\").concat(date_obj.min, \":\").concat(date_obj.sec), \"\".concat(date_obj.month, \"/\").concat(date_obj.day, \"/\").concat(date_obj.year, \" \").concat(date_obj.hour, \":\").concat(date_obj.min, \":\").concat(date_obj.sec), \"\".concat(date_obj.month, \"/\").concat(date_obj.day, \"/\").concat(date_obj.year.substring(2), \" \").concat(date_obj.hour, \":\").concat(date_obj.min, \":\").concat(date_obj.sec)];\n\n    for (var i = 0; i < date_strings.length; i++) {\n      if (input === date_strings[i]) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n  isNumber: function isNumber(input) {\n    return Object.prototype.toString.call(input) === '[object Number]';\n  },\n  isObject: function isObject(input) {\n    return _isObject(input);\n  },\n  isString: function isString(input) {\n    return Object.prototype.toString.call(input) === '[object String]';\n  },\n  makeDateObj: function makeDateObj(input) {\n    return makeDateObject(input);\n  },\n  objIsEmpty: function objIsEmpty(input) {\n    if (!_isObject(input)) {\n      throw new Error(\"Not an object\");\n    }\n\n    return Object.keys(input).length === 0;\n  }\n};\n\n//# sourceURL=webpack://rj/./src/helpers.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// ----------------\n// - Dependencies -\n// ----------------\nvar rules_schema = __webpack_require__(/*! ./rules_schema.js */ \"./src/rules_schema.js\");\n\nvar h = __webpack_require__(/*! ./helpers.js */ \"./src/helpers.js\"); // ---------------------\n// - Private Functions -\n// ---------------------\n\n\nfunction makeFailureMsg(inputs) {\n  var msg_override = inputs.msg_override;\n\n  if (msg_override !== undefined) {\n    return msg_override;\n  }\n\n  var rule_obj = inputs.rule_obj;\n  var var_name = inputs.var_name;\n  var rules_arg = inputs.rules_arg;\n\n  if (var_name === '') {\n    return rule_obj.no_varname_msg(inputs.to_test, rules_arg);\n  } else {\n    return rule_obj.varname_msg(inputs.to_test, rules_arg, var_name);\n  }\n}\n\nfunction testCustomRules(to_test, custom_rules) {\n  if (custom_rules === false) {\n    return {\n      valid: true,\n      message: 'all tests pass'\n    };\n  }\n\n  if (!h.isArray(custom_rules)) {\n    throw new Error(\"Custom rules must be an array\");\n  }\n\n  for (var i = 0; i < custom_rules.length; i++) {\n    var custom_rule = custom_rules[i];\n\n    if (!custom_rule.test(to_test)) {\n      return {\n        valid: false,\n        message: custom_rule.error_msg\n      };\n    }\n  }\n\n  return {\n    valid: true,\n    message: 'all tests pass'\n  };\n}\n\nfunction validTestParam(test_param) {\n  return h.isNumber(test_param) || h.isString(test_param) || h.isBoolean(test_param) || test_param === null || test_param === undefined;\n}\n\nfunction validateInput(to_test, rules_arg) {\n  var var_name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  if (rules_arg === undefined) {\n    throw new Error(\"Not enough arguments passed to function 'validate'\");\n  }\n\n  if (!h.isObject(rules_arg)) {\n    throw new Error(\"Rules must be an object\");\n  }\n\n  if (!validTestParam(to_test)) {\n    throw new Error(\"Invalid test parameter\");\n  }\n\n  if (to_test === '' && rules_arg.required !== true) {\n    return {\n      valid: true,\n      message: 'all tests pass'\n    };\n  }\n\n  for (var i = 0; i < rules_schema.length; i++) {\n    var rule_obj = rules_schema[i];\n    var rule_name = rule_obj.rule_name;\n\n    if (rules_arg[rule_name] !== undefined) {\n      if (rule_obj.test(to_test, rules_arg) === false) {\n        return {\n          valid: false,\n          message: makeFailureMsg({\n            to_test: to_test,\n            rules_arg: rules_arg,\n            rule_obj: rule_obj,\n            var_name: var_name,\n            msg_override: rules_arg[rule_name + '_msg']\n          })\n        };\n      }\n    }\n  }\n\n  if (rules_arg.custom !== undefined) {\n    var custom_result = testCustomRules(to_test, rules_arg.custom);\n\n    if (!custom_result.valid) {\n      return custom_result;\n    }\n  }\n\n  return {\n    valid: true,\n    message: 'all tests pass'\n  };\n} // ----------\n// - Export -\n// ----------\n\n\nvar rj = function rj() {\n  return {\n    isValid: function isValid(to_test, rules_arg) {\n      var var_name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      return validateInput(to_test, rules_arg, var_name).valid;\n    },\n    test: function test(to_test, rules_arg) {\n      var var_name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      return validateInput(to_test, rules_arg, var_name);\n    },\n    validate: function validate(to_test, rules_arg) {\n      var var_name = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      return validateInput(to_test, rules_arg, var_name);\n    },\n    validateAll: function validateAll(request) {\n      if (!h.isArray(request)) {\n        throw new Error(\"Input to validateAll() must be an array\");\n      }\n\n      var output = {\n        valid: true\n      };\n\n      for (var i = 0; i < request.length; i++) {\n        var item = request[i];\n        var result = validateInput(item.value, item.rules, item.name);\n        output[item.name] = result;\n        output.valid = output.valid && result.valid;\n      }\n\n      return output;\n    }\n  };\n};\n\nif ( true && typeof module.exports !== 'undefined') {\n  module.exports = rj;\n} else {\n  window.rj = rj;\n}\n\n//# sourceURL=webpack://rj/./src/index.js?");

/***/ }),

/***/ "./src/rules_functions.js":
/*!********************************!*\
  !*** ./src/rules_functions.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// For each function, returning 'true' means it passed validation\nvar h = __webpack_require__(/*! ./helpers.js */ \"./src/helpers.js\");\n\nmodule.exports = {\n  after: function after(to_test, rules_arg) {\n    var after_param = rules_arg.after;\n\n    if (after_param === false) {\n      return true;\n    }\n\n    if (Object.prototype.toString.call(to_test) !== '[object Date]') {\n      to_test = new Date(to_test);\n    }\n\n    if (Object.prototype.toString.call(after_param) !== '[object Date]') {\n      after_param = new Date(after_param);\n    }\n\n    return to_test > after_param;\n  },\n  afterOr: function afterOr(to_test, rules_arg) {\n    var after_param = rules_arg.after_or;\n\n    if (after_param === false) {\n      return true;\n    }\n\n    if (Object.prototype.toString.call(to_test) !== '[object Date]') {\n      to_test = new Date(to_test);\n    }\n\n    if (Object.prototype.toString.call(after_param) !== '[object Date]') {\n      after_param = new Date(after_param);\n    }\n\n    return to_test >= after_param;\n  },\n  alpha: function alpha(to_test, rules_arg) {\n    if (rules_arg.alpha === false) {\n      return true;\n    }\n\n    if (h.isNumber(to_test)) {\n      return false;\n    }\n\n    if (to_test === '') {\n      return true;\n    }\n\n    var regex = /([\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]+)/g;\n    to_test = to_test.replace(/ /g, \"\");\n    regex_result = to_test.match(regex);\n\n    if (regex_result === null) {\n      return false;\n    }\n\n    return regex_result[0] === to_test;\n  },\n  alphanumeric: function alphanumeric(to_test, rules_arg) {\n    if (rules_arg.alphanumeric === false) {\n      return true;\n    }\n\n    if (h.isNumber(to_test)) {\n      return false;\n    }\n\n    if (to_test === '') {\n      return true;\n    }\n\n    var regex = /([0-9\\u0041-\\u005A\\u0061-\\u007A\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0\\u08A2-\\u08AC\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097F\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C33\\u0C35-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191C\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA697\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA793\\uA7A0-\\uA7AA\\uA7F8-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA80-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]+)/g;\n    regex_result = to_test.match(regex);\n\n    if (regex_result === null) {\n      return false;\n    }\n\n    return regex_result[0] === to_test;\n  },\n  before: function before(to_test, rules_arg) {\n    var before_param = rules_arg.before;\n\n    if (before_param === false) {\n      return true;\n    }\n\n    if (Object.prototype.toString.call(to_test) !== '[object Date]') {\n      to_test = new Date(to_test);\n    }\n\n    if (Object.prototype.toString.call(before_param) !== '[object Date]') {\n      before_param = new Date(before_param);\n    }\n\n    return to_test < before_param;\n  },\n  beforeOr: function beforeOr(to_test, rules_arg) {\n    var before_param = rules_arg.before_or;\n\n    if (before_param === false) {\n      return true;\n    }\n\n    if (Object.prototype.toString.call(to_test) !== '[object Date]') {\n      to_test = new Date(to_test);\n    }\n\n    if (Object.prototype.toString.call(before_param) !== '[object Date]') {\n      before_param = new Date(before_param);\n    }\n\n    return to_test <= before_param;\n  },\n  \"in\": function _in(to_test, rules_arg) {\n    var in_param = rules_arg[\"in\"];\n\n    if (in_param === false) {\n      return true;\n    }\n\n    if (h.isArray(in_param)) {\n      return h.inArray(to_test, in_param);\n    }\n\n    if (h.isObject(in_param)) {\n      return in_param[to_test] !== undefined;\n    }\n\n    throw new Error('argument supplied to \"in\" rule must be either an array or an object');\n  },\n  isDate: function isDate(to_test, rules_arg) {\n    var date_arg = rules_arg.date;\n    var options = ['yyyy-mm-dd', 'mm/dd/yyyy', 'mm/dd/yy'];\n\n    if (date_arg === false) {\n      return true;\n    }\n\n    if (!h.isString(to_test)) {\n      return false;\n    }\n\n    if (date_arg === true) {\n      return h.isDate(to_test);\n    }\n\n    if (!options.includes(date_arg)) {\n      return false;\n    }\n\n    var date_obj = h.makeDateObj(to_test);\n\n    if (date_arg.match(/yyyy\\-mm\\-dd/) !== null) {\n      var date_str = \"\".concat(date_obj.year, \"-\").concat(date_obj.month, \"-\").concat(date_obj.day);\n    }\n\n    if (date_arg.match(/mm\\/dd\\/yyyy/) !== null) {\n      var date_str = \"\".concat(date_obj.month, \"/\").concat(date_obj.day, \"/\").concat(date_obj.year);\n    } else if (date_arg.match(/mm\\/dd\\/yy/) !== null) {\n      var year = date_obj.year.substring(2);\n      var date_str = \"\".concat(date_obj.month, \"/\").concat(date_obj.day, \"/\").concat(year);\n    }\n\n    return to_test === date_str;\n  },\n  isDateTime: function isDateTime(to_test, rules_arg) {\n    var date_arg = rules_arg.datetime;\n    var options = ['yyyy-mm-dd hh:mm:ss', 'mm/dd/yyyy hh:mm:ss', 'mm/dd/yy hh:mm:ss'];\n\n    if (date_arg === false) {\n      return true;\n    }\n\n    if (!h.isString(to_test)) {\n      return false;\n    }\n\n    if (date_arg === true) {\n      return h.isDateTime(to_test);\n    }\n\n    if (!options.includes(date_arg)) {\n      return false;\n    }\n\n    var date_obj = h.makeDateObj(to_test);\n\n    if (date_arg.match(/yyyy\\-mm\\-dd/) !== null) {\n      var date_str = \"\".concat(date_obj.year, \"-\").concat(date_obj.month, \"-\").concat(date_obj.day);\n    }\n\n    if (date_arg.match(/mm\\/dd\\/yyyy/) !== null) {\n      var date_str = \"\".concat(date_obj.month, \"/\").concat(date_obj.day, \"/\").concat(date_obj.year);\n    } else if (date_arg.match(/mm\\/dd\\/yy/) !== null) {\n      var year = date_obj.year.substring(2);\n      var date_str = \"\".concat(date_obj.month, \"/\").concat(date_obj.day, \"/\").concat(year);\n    }\n\n    date_str += \" \".concat(date_obj.hour, \":\").concat(date_obj.min, \":\").concat(date_obj.sec);\n    return to_test === date_str;\n  },\n  isEmail: function isEmail(to_test, rules_arg) {\n    if (rules_arg.email === false) {\n      return true;\n    }\n\n    if (!h.isString(to_test)) {\n      return false;\n    }\n\n    var regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    regex_result = to_test.match(regex);\n    return regex_result !== null;\n  },\n  isPoBox: function isPoBox(to_test, rules_arg) {\n    if (!h.isString(to_test)) {\n      return false;\n    }\n\n    var regex = /^ *((#\\d+)|((box|bin)[-. \\/\\\\]?\\d+)|(.*p[ \\.]? ?(o|0)[-. \\/\\\\]? *-?((box|bin)|b|(#|num)?\\d+))|(p(ost)? *(o(ff(ice)?)?)? *((box|bin)|b)? *\\d+)|(p *-?\\/?(o)? *-?box)|post office box|((box|bin)|b) *(number|num|#)? *\\d+|(num|number|#) *\\d+)/i;\n    regex_result = to_test.match(regex);\n    return regex_result !== null;\n  },\n  isNumber: function isNumber(to_test, rules_arg) {\n    if (rules_arg.number === false) {\n      return true;\n    }\n\n    return h.isNumber(to_test);\n  },\n  isString: function isString(to_test, rules_arg) {\n    if (rules_arg.string === false) {\n      return true;\n    }\n\n    return h.isString(to_test);\n  },\n  max: function max(to_test, rules_arg) {\n    var max = rules_arg.max;\n\n    if (rules_arg.max === false) {\n      return true;\n    }\n\n    if (max === undefined || max === null) {\n      throw new Error('Max not set');\n    }\n\n    if (h.isNumber(to_test)) {\n      return to_test <= max;\n    }\n\n    return to_test.length <= max;\n  },\n  min: function min(to_test, rules_arg) {\n    var min = rules_arg.min;\n\n    if (rules_arg.min === false) {\n      return true;\n    }\n\n    if (min === undefined || min === null) {\n      throw new Error('Min not set');\n    }\n\n    if (h.isNumber(to_test)) {\n      return to_test >= min;\n    }\n\n    return to_test.length >= min;\n  },\n  notIn: function notIn(to_test, rules_arg) {\n    var in_param = rules_arg.not_in;\n\n    if (in_param === false) {\n      return true;\n    }\n\n    if (h.isArray(in_param)) {\n      return !h.inArray(to_test, in_param);\n    }\n\n    if (h.isObject(in_param)) {\n      return in_param[to_test] === undefined;\n    }\n\n    throw new Error('argument supplied to \"not_in\" rule must be either an array or an object');\n  },\n  numeric: function numeric(to_test, rules_arg) {\n    if (rules_arg.numeric === false) {\n      return true;\n    }\n\n    if (rules_arg.numeric === 'number') {\n      return h.isNumber(to_test);\n    }\n\n    if (rules_arg.numeric === 'string' && !h.isString(to_test)) {\n      return false;\n    }\n\n    if (h.isNumber(to_test)) {\n      return true;\n    }\n\n    var converted_num = Number(to_test);\n\n    if (converted_num === NaN) {\n      return false;\n    }\n\n    var converted_string = converted_num.toString();\n    return to_test === converted_string;\n  },\n  required: function required(to_test, rules_arg) {\n    if (rules_arg.required === false) {\n      return true;\n    }\n\n    if (to_test === null) {\n      return false;\n    }\n\n    if (h.isString(to_test)) {\n      return to_test.trim() !== '';\n    }\n\n    if (h.isNumber(to_test)) {\n      return to_test > 0;\n    }\n\n    return false;\n  },\n  zip: function zip(to_test, rules_arg) {\n    if (rules_arg.zip === false) {\n      return true;\n    }\n\n    if (to_test === null) {\n      return false;\n    }\n\n    if (h.isNumber(to_test)) {\n      to_test = to_test.toString();\n    }\n\n    if (!h.isString(to_test)) {\n      return false;\n    }\n\n    if (rules_arg.zip === 'usa-5') {\n      var regex = /^\\d{5}$/;\n    } else if (rules_arg.zip === 'usa-9') {\n      var regex = /^\\d{5}\\-\\d{4}$/;\n    } else {\n      var regex = /^\\d{5}$|^\\d{5}-\\d{4}$/;\n    }\n\n    return regex.test(to_test);\n  }\n};\n\n//# sourceURL=webpack://rj/./src/rules_functions.js?");

/***/ }),

/***/ "./src/rules_schema.js":
/*!*****************************!*\
  !*** ./src/rules_schema.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var rules_tests = __webpack_require__(/*! ./rules_functions.js */ \"./src/rules_functions.js\");\n\nvar h = __webpack_require__(/*! ./helpers.js */ \"./src/helpers.js\");\n\nmodule.exports = [{\n  rule_name: 'required',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    return 'Required';\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    return var_name + ' is required';\n  },\n  test: function test(to_test, rules_arg) {\n    return rules_tests.required(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'same',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    var name = rules_arg.same.name;\n    return 'Must be the same as ' + name;\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    var name = rules_arg.same.name;\n    return var_name + ' must be the same as ' + name;\n  },\n  test: function test(to_test, rules_arg) {\n    if (rules_arg.same === false) {\n      return true;\n    }\n\n    if (!h.isObject(rules_arg.same)) {\n      throw new Error(\"The same rule must be an object\");\n    }\n\n    var value = rules_arg.same.value;\n    return to_test === value;\n  }\n}, {\n  rule_name: 'different',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    var name = rules_arg.different.name;\n    return 'Must not be the same as ' + name;\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    var name = rules_arg.different.name;\n    return var_name + ' must not be the same as ' + name;\n  },\n  test: function test(to_test, rules_arg) {\n    if (rules_arg.different === false) {\n      return true;\n    }\n\n    if (!h.isObject(rules_arg.different)) {\n      throw new Error(\"The different rule must be an object\");\n    }\n\n    var value = rules_arg.different.value;\n    return to_test !== value;\n  }\n}, {\n  rule_name: 'min',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    var min_length = rules_arg.min;\n\n    if (h.isNumber(to_test)) {\n      return 'Must be ' + min_length + ' or larger';\n    }\n\n    return 'Must be ' + min_length + ' or longer';\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    var min_length = rules_arg.min;\n\n    if (h.isNumber(to_test)) {\n      return var_name + ' must be ' + min_length + ' or larger';\n    }\n\n    return var_name + ' must be ' + min_length + ' or longer';\n  },\n  test: function test(to_test, rules_arg) {\n    return rules_tests.min(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'max',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    var max_length = rules_arg.max;\n\n    if (h.isNumber(to_test)) {\n      return 'Must be ' + max_length + ' or smaller';\n    }\n\n    return 'Must be ' + max_length + ' or shorter';\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    var max_length = rules_arg.max;\n\n    if (h.isNumber(to_test)) {\n      return var_name + ' must be ' + max_length + ' or smaller';\n    }\n\n    return var_name + ' must be ' + max_length + ' or shorter';\n  },\n  test: function test(to_test, rules_arg) {\n    return rules_tests.max(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'alpha',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    return 'Please enter letters only';\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    return var_name + ' may only contain letters';\n  },\n  test: function test(to_test, rules_arg) {\n    return rules_tests.alpha(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'alphanumeric',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    return 'Please enter letters or numbers only';\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    return var_name + ' may only contain letters or numbers';\n  },\n  test: function test(to_test, rules_arg) {\n    return rules_tests.alphanumeric(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'numeric',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    return 'The input must be a number';\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    return var_name + ' must be a number';\n  },\n  test: function test(to_test, rules_arg) {\n    return rules_tests.numeric(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'number',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    return 'The input must be a number';\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    return var_name + ' must be a number';\n  },\n  test: function test(to_test, rules_arg) {\n    return rules_tests.isNumber(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'string',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    return 'The input must be a string';\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    return var_name + ' must be a string';\n  },\n  test: function test(to_test, rules_arg) {\n    return rules_tests.isString(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'date',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    return 'Please enter a valid date';\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    return var_name + ' must be a valid date';\n  },\n  test: function test(to_test, rules_arg) {\n    return rules_tests.isDate(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'datetime',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    return 'Please enter a valid date and time';\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    return var_name + ' must be a date and time';\n  },\n  test: function test(to_test, rules_arg) {\n    return rules_tests.isDateTime(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'email',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    return 'Please enter a valid email address';\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    return var_name + ' must be a valid email address';\n  },\n  test: function test(to_test, rules_arg) {\n    return rules_tests.isEmail(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'po_box',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    return 'Invalid P.O. Box';\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    return var_name + ' must be a P.O. Box';\n  },\n  test: function test(to_test, rules_arg) {\n    if (rules_arg.po_box === false) {\n      return true;\n    }\n\n    return rules_tests.isPoBox(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'not_po_box',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    return 'P.O. Box not allowed';\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    return var_name + ' must not be a P.O. Box';\n  },\n  test: function test(to_test, rules_arg) {\n    if (rules_arg.not_po_box === false) {\n      return true;\n    }\n\n    return !rules_tests.isPoBox(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'in',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    return 'Please enter a valid option';\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    return var_name + ' is not a valid option';\n  },\n  test: function test(to_test, rules_arg) {\n    if (rules_arg[\"in\"] === false) {\n      return true;\n    }\n\n    return rules_tests[\"in\"](to_test, rules_arg);\n  }\n}, {\n  rule_name: 'not_in',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    return 'That option is not allowed';\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    return var_name + ' is not a valid option';\n  },\n  test: function test(to_test, rules_arg) {\n    if (rules_arg.not_in === false) {\n      return true;\n    }\n\n    return rules_tests.notIn(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'before',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    var time_string = rules_arg.before.toString();\n    time_string = time_string.split(' 00:00:00')[0];\n    return 'Please enter a date prior to ' + time_string;\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    var time_string = rules_arg.before.toString();\n    time_string = time_string.split(' 00:00:00')[0];\n    return var_name + ' must be prior to ' + time_string;\n  },\n  test: function test(to_test, rules_arg) {\n    return rules_tests.before(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'before_or',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    var time_string = rules_arg.before_or.toString();\n    time_string = time_string.split(' 00:00:00')[0];\n    return 'Please enter a date on or prior to ' + time_string;\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    var time_string = rules_arg.before_or.toString();\n    time_string = time_string.split(' 00:00:00')[0];\n    return var_name + ' must be on or prior to ' + time_string;\n  },\n  test: function test(to_test, rules_arg) {\n    return rules_tests.beforeOr(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'after',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    var time_string = rules_arg.after.toString();\n    time_string = time_string.split(' 00:00:00')[0];\n    return 'Please enter a date after ' + time_string;\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    var time_string = rules_arg.after.toString();\n    time_string = time_string.split(' 00:00:00')[0];\n    return var_name + ' must be after ' + time_string;\n  },\n  test: function test(to_test, rules_arg) {\n    return rules_tests.after(to_test, rules_arg);\n  }\n}, {\n  rule_name: 'after_or',\n  no_varname_msg: function no_varname_msg(to_test, rules_arg) {\n    var time_string = rules_arg.after_or.toString();\n    time_string = time_string.split(' 00:00:00')[0];\n    return 'Please enter a date on or after ' + time_string;\n  },\n  varname_msg: function varname_msg(to_test, rules_arg, var_name) {\n    var time_string = rules_arg.after_or.toString();\n    time_string = time_string.split(' 00:00:00')[0];\n    return var_name + ' must be on or after ' + time_string;\n  },\n  test: function test(to_test, rules_arg) {\n    return rules_tests.afterOr(to_test, rules_arg);\n  }\n}];\n\n//# sourceURL=webpack://rj/./src/rules_schema.js?");

/***/ })

/******/ });
});